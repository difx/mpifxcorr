AC_INIT([mpifxcorr], [0.2], [Adam Deller <adeller@astro.swin.edu.au>])
AM_INIT_AUTOMAKE
AM_CONFIG_HEADER(config.h)
AC_LANG_CPLUSPLUS
AC_PROG_CXX
AC_PROG_RANLIB

dnl **********************************************************
dnl **** Set path for Intel Performance Primitive library ****
dnl **********************************************************
AC_ARG_WITH(ipp-root, [  --with-ipp-root=ROOT
                          ipp root is ROOT (optional).  Use env variable 
		          IPPROOT otherwise.],
ipp_root="$withval", ipp_root="")
if test x"$ipp_root" != "x"; then
	IPP_CFLAGS="-I$ipp_root/include"
	IPP_LIBS="-L$ipp_root/sharedlib -L$ipp_root/sharedlib/linux32"
else
	IPP_CFLAGS="-I$IPPROOT/include"
	IPP_LIBS="-L$IPPROOT/sharedlib -L$IPPROOT/sharedlib/linux32"
fi
dnl **********************************************************


dnl **********************************************************
dnl **** Look for StreamStor libraries                    ****
dnl **** cause native Mark5 to be built if found.         ****
dnl **********************************************************
ss_enabled=true
AC_CHECK_HEADER([xlrapi.h],
		[AC_DEFINE([HAVE_XLRAPI_H], 1, [1=has SS])],
		[ss_enabled=false])
if test ${ss_enabled} = true; then
	SS_LIBS="-lwdapi801 -lssapi"
else
	SS_LIBS=""
fi
AM_CONDITIONAL(WITH_SS, $ss_enabled)
dnl **********************************************************


dnl **********************************************************
dnl **** Look for RPFITS                                  ****
dnl **********************************************************
rpfits_enabled=true
PWD=`pwd`
AC_CHECK_HEADER([$PWD/../rpfits/code/RPFITS.h],
		[AC_DEFINE([HAVE_RPFITS], 1, [1=has RPFITS])],
		[rpfits_enabled=false])
if test ${rpfits_enabled} = true; then
	RPFITS_CFLAGS="-I$PWD/../rpfits/code"
	RPFITS_LIBS="-L$PWD/../rpfits/linux -lrpfits -lg2c"
else
RPFITS_CFLAGS=""
RPFITS_LIBS=""
fi
dnl **********************************************************


dnl **********************************************************
dnl **** Find mark5access library                         ****
dnl **********************************************************
PKG_CHECK_MODULES(M5ACCESS, mark5access)
dnl **********************************************************


CXXFLAGS="${CXXFLAGS} ${M5ACCESS_CFLAGS} ${IPP_CFLAGS} ${RPFITS_CFLAGS}"
LIBS="${M5ACCESS_LIBS} ${SS_LIBS} ${IPP_LIBS} ${RPFITS_LIBS}"

echo "CXXFLAGS = ${CXXFLAGS}"
echo "LIBS = ${LIBS}"
AC_OUTPUT(Makefile src/Makefile scripts/Makefile)
