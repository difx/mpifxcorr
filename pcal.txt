Outstanding issues
==================

pcal
 - needs to know the start time of the data for consistency of results (this could be set in clear() (change to reset())
 - needs to do the final fourier transform (this could be done in getfinalpcal()

core
 - make sure we call getfinalpcal

mode
 - make sure we're using Band and Freq appropriately
 - get number of tones per subband and pcal frequencies from configuration object


+ Done
- Todo
? Broken
PhaseCal pathway
================
Configuration::processDatastreamTable
+ get phasecalintervalmhz and check it's a positive integer

Configuration::populateResultLengths
+ set up space at the end of results for phase cal values

Core::processdata
  //before processing
+ for all datastreams i
+   modes[i].resetpcal()
  //just before averageandsendAcorrs 

Core::copyPCalTones()
-  call Mode::getfinalpcal()
  
Mode::Mode
+ for each frequency
?   Work out the number of tones in each band
?   Work out the pcaloffset in hz for each band
?   Instantiate a PCal extractor
?   getLen of extractor
? Instantiate pcalresults[nband][ntones]
  	
Mode::~Mode
+ delete extractors
+ delete pcalresults

Mode::process
+ for each frequency
+  if phase cal is on for this frequency
?   extract and integrate

Mode::getPCal(j, k) or Mode::getPCal(j) (not yet written)

Mode::resetpcal
+ for each frequency
?   PCal->clear()

FXManager

Visibility::Visibility
+ for each datastream
+   for each frequency
+     allocate one cf32 per pcal extracted

Visibility::~Visibility
+ delete pcal

Visibility::writedifx
+ open one pcal file for each antenna

Visibility::writedata
+ write out data to disk

